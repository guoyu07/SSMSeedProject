<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlDialectInspection, SqlNoDataSourceInspection -->
<mapper namespace="com.github.izhangzhihao.SSMSeedProject.Mapper.StudentMapper">
    <resultMap type="Student" id="StudentResult">
        <id property="studId" column="stud_id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="dob" column="dob"/>
        <!--一对一 嵌套查询-->
        <!--<association property="address" column="addrid" javaType="Address"
                     select="com.github.izhangzhihao.SSMSeedProject.Mapper.AddressMapper.findAddressById"/>-->
        <!--一对一 嵌套结果-->
        <association property="address" column="addrid" javaType="Address"
                     resultMap="com.github.izhangzhihao.SSMSeedProject.Mapper.AddressMapper.AddressResult"/>
        <!--集合的嵌套查询 好像哪里不对-->
        <!--<collection property="teacherList" javaType="ArrayList" column="stud_id" ofType="Teacher"
                    select="com.github.izhangzhihao.SSMSeedProject.Mapper.TeacherMapper.selectTeacherByStudentId"/>-->
        <!--集合的嵌套结果-->
        <!--<collection property="teacherList" ofType="Teacher">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="passWord" column="passWord"/>
        </collection>-->
        <collection property="teacherList" ofType="Teacher"
                    resultMap="com.github.izhangzhihao.SSMSeedProject.Mapper.TeacherMapper.TeacherResult"/>
    </resultMap>

    <!--<resultMap type="Student" id="StudentWithAddressResult">
        <id property="studId" column="stud_id" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="address.addrId" column="addrid" />
        <result property="address.street" column="street" />
        <result property="address.city" column="city" />
        <result property="address.state" column="state" />
        <result property="address.zip" column="zip" />
        <result property="address.country" column="country" />
    </resultMap>-->

    <select id="findAllStudents" resultMap="StudentResult">
        SELECT * FROM STUDENT
    </select>

    <select id="findStudentById" parameterType="int" resultType="Student">
        SELECT
        STUD_ID AS STUDID,
        NAME,
        EMAIL,
        DOB
        FROM STUDENT WHERE STUD_ID=#{Id}
    </select>

    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true"
            keyProperty="studId">
        INSERT INTO STUDENT(NAME,EMAIL,DOB)
        VALUES(#{name},#{email},#{dob})
    </insert>

    <update id="updateStudent" parameterType="Student">
        UPDATE STUDENT
        SET NAME=#{name} ,
        EMAIL =#{email},
        DOB =#{dob}
        WHERE STUD_ID = #{studId}
    </update>

    <delete id="deleteStudent" parameterType="int">
        DELETE
        FROM STUDENT
        WHERE STUD_ID = #{studId}
    </delete>


    <!--Student<=>Address一对一映射-->

    <select id="findStudentByIdWithAddress" parameterType="int" resultMap="StudentResult">
        SELECT
              S.stud_id,
              S.name,
              S.email,
              S.dob,
              S.addrID AS addrid ,
              A.STREET,
              A.CITY,
              A.STATE,
              A.ZIP,
              A.COUNTRY
        FROM STUDENT S LEFT JOIN ADDRESS A ON S.addrID = a.ADDRID
        WHERE S.stud_id=#{id}
    </select>

    <!--Student<=>Teacher一对多映射-->

    <select id="selectStudentWithTeachers" parameterType="int" resultMap="StudentResult">
        SELECT * FROM student S
        LEFT JOIN teacher T
        on S.stud_id=T.studentId
        WHERE S.stud_id=#{id}
    </select>

    <!-- Very Complex Result Map -->
    <!--<resultMap id="detailedBlogResultMap" type="Blog">
        <constructor>
            <idArg column="blog_id" javaType="int"/>
        </constructor>
        <result property="title" column="blog_title"/>
        <association property="author" javaType=" Author">
            <id property="id" column="author_id"/>
            <result property="username" column="author_username"/>
            <result property="password" column="author_password"/>
            <result property="email" column="author_email"/>
            <result property="bio" column="author_bio"/>
            <result property="favouriteSection" column="author_favourite_section"/>
        </association>
        <collection property="posts" ofType="Post">
            <id property="id" column="post_id"/>
            <result property="subject" column="post_subject"/>
            <association property="author" javaType="Author"/>
            <collection property="comments" ofType=" Comment">
                <id property="id" column="comment_id"/>
            </collection>
            <collection property="tags" ofType=" Tag">
                <id property="id" column="tag_id"/>
            </collection>
            <discriminator javaType="int" column="draft">
                <case value="1" resultType="DraftPost"/>
            </discriminator>
        </collection>
    </resultMap>-->

</mapper>
